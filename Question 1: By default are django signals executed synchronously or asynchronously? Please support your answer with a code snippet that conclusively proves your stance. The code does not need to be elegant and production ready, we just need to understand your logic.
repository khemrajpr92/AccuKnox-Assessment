Django signals are executed synchronously by default. This means that when a signal is triggered, the registered signal handlers execute immediately within the same execution flow.

import time
from django.db.models.signals import post_save
from django.dispatch import receiver
from django.contrib.auth.models import User

@receiver(post_save, sender=User)
def signal_handler(sender, instance, **kwargs):
    print("Signal started")
    time.sleep(3)  # Simulate delay
    print("Signal finished")

# Creating a new user (this will trigger the signal)
User.objects.create(username="test_user")
print("User creation completed")


Expected Output (Observed in Console Output Order):

Signal started
(Signal processing takes 3 seconds)
Signal finished
User creation completed

This proves that the signal is executed synchronously because the execution waits for the signal handler to complete before moving forward.
